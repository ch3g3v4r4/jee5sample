package org.freejava.tools.handlers.newproject;

public class CHECKSTYLEXMLTemplate
{
  protected static String nl;
  public static synchronized CHECKSTYLEXMLTemplate create(String lineSeparator)
  {
    nl = lineSeparator;
    CHECKSTYLEXMLTemplate result = new CHECKSTYLEXMLTemplate();
    nl = null;
    return result;
  }

  public final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "<?xml version=\"1.0\"?>";
  protected final String TEXT_2 = NL + "<!DOCTYPE module PUBLIC" + NL + "    \"-//Puppy Crawl//DTD Check Configuration 1.2//EN\"" + NL + "    \"http://www.puppycrawl.com/dtds/configuration_1_2.dtd\">" + NL + "" + NL + "" + NL + "<module name=\"Checker\">" + NL + "" + NL + "  <!-- Checks that a package.html file exists for each package.     -->" + NL + "  <!-- See http://checkstyle.sf.net/config_javadoc.html#PackageHtml -->" + NL + "  <!--<module name=\"PackageHtml\"/>-->" + NL + "" + NL + "  <!-- Checks whether files end with a new line.                        -->" + NL + "  <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->" + NL + "  <module name=\"NewlineAtEndOfFile\" />" + NL + "" + NL + "  <!-- Checks that property files contain the same keys.         -->" + NL + "  <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->" + NL + "  <module name=\"Translation\" />" + NL + "" + NL + "" + NL + "  <module name=\"TreeWalker\">" + NL + "" + NL + "    <!-- Checks for Javadoc comments.                     -->" + NL + "    <!-- See http://checkstyle.sf.net/config_javadoc.html -->" + NL + "    <!-- TEMP" + NL + "    <module name=\"JavadocMethod\">" + NL + "      <property name=\"scope\" value=\"protected\" />" + NL + "      <property name=\"allowMissingPropertyJavadoc\" value=\"true\" />" + NL + "    </module>" + NL + "    <module name=\"JavadocType\" />" + NL + "    <module name=\"JavadocVariable\">" + NL + "      <property name=\"scope\" value=\"protected\" />" + NL + "    </module>" + NL + "    <module name=\"JavadocStyle\" />" + NL + " -->" + NL + "    <!-- Checks for Naming Conventions.                  -->" + NL + "    <!-- See http://checkstyle.sf.net/config_naming.html -->" + NL + "    <module name=\"ConstantName\" />" + NL + "    <module name=\"LocalFinalVariableName\" />" + NL + "    <module name=\"LocalVariableName\" />" + NL + "    <module name=\"MemberName\" />" + NL + "    <module name=\"MethodName\" />" + NL + "    <module name=\"PackageName\">" + NL + "      <property name=\"format\" value=\"^[a-z]+(\\.[a-z][a-z0-9]*)*$\" />" + NL + "    </module>" + NL + "    <module name=\"ParameterName\" />" + NL + "    <module name=\"StaticVariableName\" />" + NL + "    <module name=\"TypeName\" />" + NL + "" + NL + "    <!-- Checks for Headers                                -->" + NL + "    <!-- See http://checkstyle.sf.net/config_header.html   -->" + NL + "    <module name=\"Header\">" + NL + "      <!-- The follow property value demonstrates the ability     -->" + NL + "      <!-- to have access to ANT properties. In this case it uses -->" + NL + "      <!-- the ${basedir} property to allow Checkstyle to be run  -->" + NL + "      <!-- from any directory within a project. See property      -->" + NL + "      <!-- expansion,                                             -->" + NL + "      <!-- http://checkstyle.sf.net/config.html#properties        -->" + NL + "      <!-- <property                                              -->" + NL + "      <!--     name=\"headerFile\"                                  -->" + NL + "      <!--     value=\"${basedir}/java.header\"/>                   -->" + NL + "      <property name=\"header\"" + NL + "        value=\"/*\\n * Copyright  2003-2004 The Apache Software Foundation\\n *\\n *  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);\\n *  you may not use this file except in compliance with the License.\\n *  You may obtain a copy of the License at\\n *\\n *      http://www.apache.org/licenses/LICENSE-2.0\\n *\\n *  Unless required by applicable law or agreed to in writing, software\\n *  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,\\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n *  See the License for the specific language governing permissions and\\n *  limitations under the License.\\n *\\n */\\n\\n\" />" + NL + "    </module>" + NL + "" + NL + "    <!-- Following interprets the header file as regular expressions. -->" + NL + "    <!-- <module name=\"RegexpHeader\"/>                                -->" + NL + "" + NL + "" + NL + "    <!-- Checks for imports                              -->" + NL + "    <!-- See http://checkstyle.sf.net/config_import.html -->" + NL + "    <module name=\"AvoidStarImport\" />" + NL + "    <module name=\"IllegalImport\" /><!-- defaults to sun.* packages -->" + NL + "    <module name=\"RedundantImport\" />" + NL + "    <module name=\"UnusedImports\" />" + NL + "" + NL + "" + NL + "    <!-- Checks for Size Violations.                    -->" + NL + "    <!-- See http://checkstyle.sf.net/config_sizes.html -->" + NL + "    <module name=\"FileLength\" />" + NL + "    <module name=\"LineLength\">" + NL + "       <property name=\"ignorePattern\" value=\"^import\"/>" + NL + "    </module>" + NL + "    <module name=\"MethodLength\" />" + NL + "    <module name=\"ParameterNumber\">" + NL + "      <property name=\"max\" value=\"10\" />" + NL + "      <property name=\"tokens\" value=\"METHOD_DEF\" />" + NL + "    </module>" + NL + "" + NL + "    <!-- Checks for whitespace                               -->" + NL + "    <!-- See http://checkstyle.sf.net/config_whitespace.html -->" + NL + "    <module name=\"EmptyForIteratorPad\" />" + NL + "    <module name=\"MethodParamPad\" />" + NL + "    <module name=\"NoWhitespaceAfter\" />" + NL + "    <module name=\"NoWhitespaceBefore\" />" + NL + "    <module name=\"OperatorWrap\" />" + NL + "    <module name=\"ParenPad\" />" + NL + "    <module name=\"TypecastParenPad\" />" + NL + "    <module name=\"TabCharacter\" />" + NL + "    <module name=\"WhitespaceAfter\" />" + NL + "    <module name=\"WhitespaceAround\">" + NL + "      <property name=\"tokens\"" + NL + "        value=\"ASSIGN,BAND,BAND_ASSIGN,BOR,BOR_ASSIGN,BSR,BSR_ASSIGN,BXOR,BXOR_ASSIGN,COLON,DIV,DIV_ASSIGN,EQUAL,GE,GT,LAND,LCURLY,LE,LITERAL_ASSERT,LITERAL_CATCH,LITERAL_DO,LITERAL_ELSE,LITERAL_FINALLY,LITERAL_FOR,LITERAL_IF,LITERAL_RETURN,LITERAL_SYNCHRONIZED,LITERAL_TRY,LITERAL_WHILE,LOR,LT,MINUS,MINUS_ASSIGN,MOD,MOD_ASSIGN,NOT_EQUAL,PLUS,PLUS_ASSIGN,QUESTION,RCURLY,SL,SLIST,SL_ASSIGN,SR,SR_ASSIGN,STAR,STAR_ASSIGN,LITERAL_ASSERT,TYPE_EXTENSION_AND,WILDCARD_TYPE\" />" + NL + "    </module>" + NL + "" + NL + "" + NL + "    <!-- Modifier Checks                                    -->" + NL + "    <!-- See http://checkstyle.sf.net/config_modifiers.html -->" + NL + "    <module name=\"ModifierOrder\" />" + NL + "    <module name=\"RedundantModifier\" />" + NL + "" + NL + "" + NL + "    <!-- Checks for blocks. You know, those {}'s         -->" + NL + "    <!-- See http://checkstyle.sf.net/config_blocks.html -->" + NL + "    <module name=\"AvoidNestedBlocks\" />" + NL + "    <module name=\"EmptyBlock\" />" + NL + "    <module name=\"LeftCurly\" />" + NL + "    <module name=\"NeedBraces\" />" + NL + "    <module name=\"RightCurly\" />" + NL + "" + NL + "" + NL + "    <!-- Checks for common coding problems               -->" + NL + "    <!-- See http://checkstyle.sf.net/config_coding.html -->" + NL + "    <!--<module name=\"AvoidInlineConditionals\"/>-->" + NL + "    <module name=\"DoubleCheckedLocking\" /><!-- MY FAVOURITE -->" + NL + "    <module name=\"EmptyStatement\" />" + NL + "    <module name=\"EqualsHashCode\" />" + NL + "    <module name=\"HiddenField\">" + NL + "      <property name=\"tokens\" value=\"VARIABLE_DEF\" />" + NL + "    </module>" + NL + "    <module name=\"IllegalInstantiation\" />" + NL + "    <module name=\"InnerAssignment\" />" + NL + "    <!--<module name=\"MagicNumber\"/>-->" + NL + "    <module name=\"MissingSwitchDefault\" />" + NL + "    <module name=\"RedundantThrows\" />" + NL + "    <module name=\"SimplifyBooleanExpression\" />" + NL + "    <module name=\"SimplifyBooleanReturn\" />" + NL + "    <module name=\"ReturnCount\">" + NL + "      <property name=\"max\" value=\"1\" />" + NL + "      <property name=\"format\" value=\"^$\" />" + NL + "    </module>" + NL + "    <module name=\"ParameterAssignment\" />" + NL + "    <module name=\"MultipleVariableDeclarations\" />" + NL + "    <!-- 'RequireThis' confuses developers when they using log.info(...) so is commented out" + NL + "    <module name=\"RequireThis\">" + NL + "      <property name=\"checkMethods\" value=\"false\" />" + NL + "    </module>" + NL + "    -->" + NL + "" + NL + "    <!-- Checks for class design                         -->" + NL + "    <!-- See http://checkstyle.sf.net/config_design.html -->" + NL + "    <!--<module name=\"DesignForExtension\"/>-->" + NL + "    <!--<module name=\"FinalClass\"/>-->" + NL + "    <module name=\"HideUtilityClassConstructor\" />" + NL + "    <module name=\"InterfaceIsType\" />" + NL + "    <module name=\"VisibilityModifier\" />" + NL + "" + NL + "    <!-- Metrics checks.                   -->" + NL + "    <!-- See http://checkstyle.sourceforge.net/config_metrics.html -->" + NL + "    <module name=\"CyclomaticComplexity\" />" + NL + "" + NL + "    <!-- Miscellaneous other checks.                   -->" + NL + "    <!-- See http://checkstyle.sf.net/config_misc.html -->" + NL + "    <module name=\"ArrayTypeStyle\" />" + NL + "    <!--<module name=\"FinalParameters\"/>-->" + NL + "    <module name=\"GenericIllegalRegexp\">" + NL + "      <property name=\"format\" value=\"\\s+$\" />" + NL + "      <property name=\"message\" value=\"Line has trailing spaces.\" />" + NL + "    </module>" + NL + "    <!-- TEMP" + NL + "    <module name=\"GenericIllegalRegexp\">" + NL + "      <property name=\"format\" value=\"System\\.out\\.print\"/>" + NL + "      <property name=\"message\" value=\"Use log instead of System.out.print.\" />" + NL + "    </module>" + NL + "    <module name=\"GenericIllegalRegexp\">" + NL + "      <property name=\"format\" value=\"[.]*\\.printStackTrace\"/>" + NL + "      <property name=\"message\" value=\"Use log(msg, ex) instead of printStackTrace().\" />" + NL + "    </module>" + NL + "     -->" + NL + "    <module name=\"GenericIllegalRegexp\">" + NL + "      <property name=\"format\" value=\"System\\.exit\"/>" + NL + "    </module>" + NL + "" + NL + "    <module name=\"TodoComment\" />" + NL + "    <module name=\"UpperEll\" />" + NL + "" + NL + "  </module>" + NL + "" + NL + "</module>";
  protected final String TEXT_3 = NL;

  public String generate(Object argument)
  {
    final StringBuffer stringBuffer = new StringBuffer();
    stringBuffer.append(TEXT_1);
    stringBuffer.append(TEXT_2);
    stringBuffer.append(TEXT_3);
    return stringBuffer.toString();
  }
}
