<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:context="http://www.springframework.org/schema/context" xmlns:jee="http://www.springframework.org/schema/jee"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xsi:schemaLocation="
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
            http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

    <context:property-placeholder location="classpath:jdbc.properties" />
    <tx:annotation-driven />

  <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
      <property name="forceShutdown"><value>true</value></property>
  </bean>

  <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
      <property name="transactionTimeout"><value>300</value></property>
  </bean>

  <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
      <property name="transactionManager"><ref bean="atomikosTransactionManager"  /></property>
      <property name="userTransaction"><ref bean="atomikosUserTransaction"  /></property>
  </bean>

    <!-- configure an Atomikos JTA-aware datasource -->
   <bean id="datasource1" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
      <property name="uniqueResourceName"><value>XADBMS1</value></property>
      <property name="xaDataSourceClassName"><value>oracle.jdbc.xa.client.OracleXADataSource</value></property>
        <property name="xaProperties">
           <props>
            <prop key="URL">${jdbc.url}</prop>
            <prop key="user">${jdbc.username}</prop>
            <prop key="password">${jdbc.password}</prop>
         </props>
     </property>
        <property name="maxPoolSize"><value>10</value></property>
        <property name="minPoolSize"><value>2</value></property>
        <property name="loginTimeout"><value>30</value></property>
        <property name="testQuery"><value>select 1 from ADMINUSER</value></property>
   </bean>
   <bean id="datasource2" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
      <property name="uniqueResourceName"><value>XADBMS2</value></property>
      <property name="xaDataSourceClassName"><value>oracle.jdbc.xa.client.OracleXADataSource</value></property>
        <property name="xaProperties">
           <props>
            <prop key="URL">${jdbc.url1}</prop>
            <prop key="user">${jdbc.username1}</prop>
            <prop key="password">${jdbc.password1}</prop>
         </props>
     </property>
        <property name="maxPoolSize"><value>10</value></property>
        <property name="minPoolSize"><value>2</value></property>
        <property name="loginTimeout"><value>30</value></property>
        <property name="testQuery"><value>select 1 from ADMINUSER</value></property>
   </bean>

   <bean id="sessionFactory1" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
            p:dataSource-ref="datasource1" p:mappingResources="adminuser.hbm.xml">
      <property name="hibernateProperties">
         <props>
            <prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JTATransactionFactory</prop>
            <prop key="hibernate.transaction.manager_lookup_class">com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup</prop>
            <prop key="hibernate.dialect">${jdbc.hibernate.dialect}</prop>
            <prop key="hibernate.show_sql">${jdbc.hibernate.show_sql}</prop>
         </props>
      </property>
   </bean>
   <bean id="sessionFactory2" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
            p:dataSource-ref="datasource2" p:mappingResources="adminuser.hbm.xml">
      <property name="hibernateProperties">
         <props>
            <prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JTATransactionFactory</prop>
            <prop key="hibernate.transaction.manager_lookup_class">com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup</prop>
            <prop key="hibernate.dialect">${jdbc.hibernate.dialect}</prop>
            <prop key="hibernate.show_sql">${jdbc.hibernate.show_sql}</prop>
         </props>
      </property>
   </bean>

    <bean id="adminUserDao" class="com.fcg.style3.dao.impl.AdminUserDAOImpl"
     p:sessionFactory1-ref="sessionFactory1" p:sessionFactory2-ref="sessionFactory2"/>

</beans>